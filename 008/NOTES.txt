

008 - VARIABLES IN C




A variable is a name of the memory location. It is used to store data. Its value can be changed, and it can be reused many times.

It is a way to represent memory location through symbol so that it can be easily identified.

VARIABLE DECLARATION SYNTAX :- 

data_type variable_list;


We can also provide values while declaring the variables as given below:

VARIABLE DECLARATION AND INITIALIZATION SYNTAX :- 

data_type variable_list = value;




Rules for Declaring a Variable :- 

A variable can have alphabets, digits, and underscore.

A variable name can start with the alphabet, and underscore only. It can't start with a digit.

No whitespace is allowed within the variable name.

A variable name must not be any reserved word or keyword, e.g. int, float, etc.




Types of Variables in C :-

1)  Local Variable

A variable that is declared inside the function or block is called a local variable.
It must be declared at the start of the block.


2)  Global Variable

A variable that is declared outside the function or block is called a global variable.
Any function can change the value of the global variable.
It is available to all the functions. It must be declared at the start of the block.


Static Variable

A variable that is declared with the static keyword is called static variable.
It retains its value between multiple function calls.


Automatic Variable

All variables in C that are declared inside the block, are automatic variables by default. We can explicitly declare an automatic variable using auto keyword.


External Variable

We can share a variable in multiple C source files by using an external variable. To declare an external variable, you need to use extern keyword.


